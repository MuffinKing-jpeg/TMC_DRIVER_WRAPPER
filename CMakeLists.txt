
cmake_minimum_required(VERSION 3.22)

project(TMC_API)
add_library(TMC_API INTERFACE)

# Enable CMake support for ASM and C languages
enable_language(C ASM)


message("TMC_API integration by:
Andrii Dobrus
Git: https://github.com/MuffinKing-jpeg")

# Add base functions in to the toolchain
set(TMC_API_INCLUDES)
list(APPEND TMC_API_INCLUDES ${CMAKE_CURRENT_SOURCE_DIR}/TMC_API/tmc/helpers)

set(TMC_API_SRC_FILES)
file(GLOB TMC_API_HELPER_SRC ${CMAKE_CURRENT_SOURCE_DIR}/TMC_API/tmc/helpers/*.c)
list(APPEND TMC_API_SRC_FILES ${TMC_API_HELPER_SRC})

# Add ramp function
if(ENABLE_RAMP)
message("Ramp enabled")
    file(GLOB TMC_API_HELPER_SRC ${CMAKE_CURRENT_SOURCE_DIR}/TMC_API/tmc/ramp/*.c)
    list(APPEND TMC_API_SRC_FILES ${TMC_API_RAMP_SRC})
    list(APPEND TMC_API_INCLUDES ${CMAKE_CURRENT_SOURCE_DIR}/TMC_API/tmc/ramp)
endif()

# Choose platform
if(USE_HAL_DRIVER)
message("TMC_DRIVERS with STM32 HAL")
    file(GLOB TMC_API_STM32_HAL_SRC ${CMAKE_CURRENT_SOURCE_DIR}/platform/stm32/HAL/Src/*.c)
    list(APPEND TMC_API_SRC_FILES ${TMC_API_STM32_HAL_SRC})
    list(APPEND TMC_API_INCLUDES ${CMAKE_CURRENT_SOURCE_DIR}/platform/stm32/HAL/Inc)
    add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/platform/stm32/HAL)
    target_link_libraries(TMC_API INTERFACE
        TMC_API_STM32_HAL
    )
endif()

# Select IC

# MAX22216
if(TMC_API_ENABLE_MAX22216)
message("MAX22216 enabled")
    file(GLOB TMC_API_MAX22216_SRC ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/MAX22216/*.c)
    list(APPEND TMC_API_SRC_FILES ${TMC_API_MAX22216_SRC})
    list(APPEND TMC_API_INCLUDES ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/MAX22216)
endif()

# TMC262
if(TMC_API_ENABLE_TMC262)
message("TMC262 enabled")
    file(GLOB TMC_API_TMC262_SRC ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC262/*.c)
    list(APPEND TMC_API_SRC_FILES ${TMC_API_TMC262_SRC})
    list(APPEND TMC_API_INCLUDES ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC262)
endif()

# TMC2130
if(TMC_API_ENABLE_TMC2130)
message("TMC2130 enabled")
    file(GLOB TMC_API_TMC2130_SRC ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC2130/*.c)
    list(APPEND TMC_API_SRC_FILES ${TMC_API_TMC2130_SRC})
    list(APPEND TMC_API_INCLUDES ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC2130)
endif()

# TMC2160
if(TMC_API_ENABLE_TMC2160)
message("TMC2160 enabled")
    file(GLOB TMC_API_TMC2160_SRC ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC2160/*.c)
    list(APPEND TMC_API_SRC_FILES ${TMC_API_TMC2160_SRC})
    list(APPEND TMC_API_INCLUDES ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC2160)
endif()

# TMC2208
if(TMC_API_ENABLE_TMC2208)
message("TMC2208 enabled")
    file(GLOB TMC_API_TMC2208_SRC ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC2208/*.c)
    list(APPEND TMC_API_SRC_FILES ${TMC_API_TMC2208_SRC})
    list(APPEND TMC_API_INCLUDES ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC2208)
endif()

# TMC2209
if(TMC_API_ENABLE_TMC2209)
message("TMC2209 enabled")
    file(GLOB TMC_API_TMC2209_SRC ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC2209/*.c)
    list(APPEND TMC_API_SRC_FILES ${TMC_API_TMC2209_SRC})
    list(APPEND TMC_API_INCLUDES ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC2209)
endif()

# TMC2224
if(TMC_API_ENABLE_TMC2224)
message("TMC2224 enabled")
    file(GLOB TMC_API_TMC2224_SRC ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC2224/*.c)
    list(APPEND TMC_API_SRC_FILES ${TMC_API_TMC2224_SRC})
    list(APPEND TMC_API_INCLUDES ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC2224)
endif()

# TMC2225
if(TMC_API_ENABLE_TMC2225)
message("TMC2225 enabled")
    file(GLOB TMC_API_TMC2225_SRC ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC2225/*.c)
    list(APPEND TMC_API_SRC_FILES ${TMC_API_TMC2225_SRC})
    list(APPEND TMC_API_INCLUDES ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC2225)
endif()

# TMC2226
if(TMC_API_ENABLE_TMC2226)
message("TMC2226 enabled")
    file(GLOB TMC_API_TMC2226_SRC ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC2226/*.c)
    list(APPEND TMC_API_SRC_FILES ${TMC_API_TMC2226_SRC})
    list(APPEND TMC_API_INCLUDES ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC2226)
endif()

# TMC2240
if(TMC_API_ENABLE_TMC2240)
message("TMC2240 enabled")
    file(GLOB TMC_API_TMC2240_SRC ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC2240/*.c)
    list(APPEND TMC_API_SRC_FILES ${TMC_API_TMC2240_SRC})
    list(APPEND TMC_API_INCLUDES ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC2240)
endif()

# TMC2262
if(TMC_API_ENABLE_TMC2262)
message("TMC2262 enabled")
    file(GLOB TMC_API_TMC2262_SRC ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC2262/*.c)
    list(APPEND TMC_API_SRC_FILES ${TMC_API_TMC2262_SRC})
    list(APPEND TMC_API_INCLUDES ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC2262)
endif()

# TMC2300
if(TMC_API_ENABLE_TMC2300)
message("TMC2300 enabled")
    file(GLOB TMC_API_TMC2300_SRC ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC2300/*.c)
    list(APPEND TMC_API_SRC_FILES ${TMC_API_TMC2300_SRC})
    list(APPEND TMC_API_INCLUDES ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC2300)
endif()

# TMC2660
if(TMC_API_ENABLE_TMC2660)
message("TMC2660 enabled")
    file(GLOB TMC_API_TMC2660_SRC ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC2660/*.c)
    list(APPEND TMC_API_SRC_FILES ${TMC_API_TMC2660_SRC})
    list(APPEND TMC_API_INCLUDES ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC2660)
endif()

# TMC4361A
if(TMC_API_ENABLE_TMC4361A)
message("TMC4361A enabled")
    file(GLOB TMC_API_TMC4361A_SRC ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC4361A/*.c)
    list(APPEND TMC_API_SRC_FILES ${TMC_API_TMC4361A_SRC})
    list(APPEND TMC_API_INCLUDES ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC4361A)
endif()

# TMC4671
if(TMC_API_ENABLE_TMC4671)
message("TMC4671 enabled")
    file(GLOB TMC_API_TMC4671_SRC ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC4671/*.c)
    list(APPEND TMC_API_SRC_FILES ${TMC_API_TMC4671_SRC})
    list(APPEND TMC_API_INCLUDES ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC4671)
endif()

# TMC5031
if(TMC_API_ENABLE_TMC5031)
message("TMC5031 enabled")
    file(GLOB TMC_API_TMC5031_SRC ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC5031/*.c)
    list(APPEND TMC_API_SRC_FILES ${TMC_API_TMC5031_SRC})
    list(APPEND TMC_API_INCLUDES ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC5031)
endif()

# TMC5041
if(TMC_API_ENABLE_TMC5041)
message("TMC5041 enabled")
    file(GLOB TMC_API_TMC5041_SRC ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC5041/*.c)
    list(APPEND TMC_API_SRC_FILES ${TMC_API_TMC5041_SRC})
    list(APPEND TMC_API_INCLUDES ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC5041)
endif()

# TMC5062
if(TMC_API_ENABLE_TMC5062)
message("TMC5062 enabled")
    file(GLOB TMC_API_TMC5062_SRC ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC5062/*.c)
    list(APPEND TMC_API_SRC_FILES ${TMC_API_TMC5062_SRC})
    list(APPEND TMC_API_INCLUDES ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC5062)
endif()

# TMC5072
if(TMC_API_ENABLE_TMC5072)
message("TMC5072 enabled")
    file(GLOB TMC_API_TMC5072_SRC ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC5072/*.c)
    list(APPEND TMC_API_SRC_FILES ${TMC_API_TMC5072_SRC})
    list(APPEND TMC_API_INCLUDES ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC5072)
endif()

# TMC5130
if(TMC_API_ENABLE_TMC5130)
message("TMC5130 enabled")
    file(GLOB TMC_API_TMC5130_SRC ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC5130/*.c)
    list(APPEND TMC_API_SRC_FILES ${TMC_API_TMC5130_SRC})
    list(APPEND TMC_API_INCLUDES ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC5130)
endif()

# TMC5160
if(TMC_API_ENABLE_TMC5160)
message("TMC5160 enabled")
    file(GLOB TMC_API_TMC5160_SRC ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC5160/*.c)
    list(APPEND TMC_API_SRC_FILES ${TMC_API_TMC5160_SRC})
    list(APPEND TMC_API_INCLUDES ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC5160)
endif()

# TMC5240
if(TMC_API_ENABLE_TMC5240)
message("TMC5240 enabled")
    file(GLOB TMC_API_TMC5240_SRC ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC5240/*.c)
    list(APPEND TMC_API_SRC_FILES ${TMC_API_TMC5240_SRC})
    list(APPEND TMC_API_INCLUDES ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC5240)
endif()

# TMC5262
if(TMC_API_ENABLE_TMC5262)
message("TMC5262 enabled")
    file(GLOB TMC_API_TMC5262_SRC ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC5262/*.c)
    list(APPEND TMC_API_SRC_FILES ${TMC_API_TMC5262_SRC})
    list(APPEND TMC_API_INCLUDES ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC5262)
endif()

# TMC5271
if(TMC_API_ENABLE_TMC5271)
message("TMC5271 enabled")
    file(GLOB TMC_API_TMC5271_SRC ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC5271/*.c)
    list(APPEND TMC_API_SRC_FILES ${TMC_API_TMC5271_SRC})
    list(APPEND TMC_API_INCLUDES ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC5271)
endif()

# TMC5272
if(TMC_API_ENABLE_TMC5272)
message("TMC5272 enabled")
    file(GLOB TMC_API_TMC5272_SRC ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC5272/*.c)
    list(APPEND TMC_API_SRC_FILES ${TMC_API_TMC5272_SRC})
    list(APPEND TMC_API_INCLUDES ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC5272)
endif()

# TMC6100
if(TMC_API_ENABLE_TMC6100)
message("TMC6100 enabled")
    file(GLOB TMC_API_TMC6100_SRC ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC6100/*.c)
    list(APPEND TMC_API_SRC_FILES ${TMC_API_TMC6100_SRC})
    list(APPEND TMC_API_INCLUDES ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC6100)
endif()

# TMC6200
if(TMC_API_ENABLE_TMC6200)
message("TMC6200 enabled")
    file(GLOB TMC_API_TMC6200_SRC ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC6200/*.c)
    list(APPEND TMC_API_SRC_FILES ${TMC_API_TMC6200_SRC})
    list(APPEND TMC_API_INCLUDES ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC6200)
endif()

# TMC7300
if(TMC_API_ENABLE_TMC7300)
message("TMC7300 enabled")
    file(GLOB TMC_API_TMC7300_SRC ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC7300/*.c)
    list(APPEND TMC_API_SRC_FILES ${TMC_API_TMC7300_SRC})
    list(APPEND TMC_API_INCLUDES ${CMAKE_CURRENT_SOURCE_DIR}/TMC-API/tmc/ic/TMC7300)
endif()

# Put it together

target_link_directories(TMC_API INTERFACE
        
    )


target_include_directories(TMC_API INTERFACE
    ${TMC_API_INCLUDES}
)

target_sources(TMC_API PUBLIC
    ${TMC_API_SRC_FILES}
    # Add user sources here
)



# Validate that STM32CubeMX code is compatible with C standard
if(CMAKE_C_STANDARD LESS 11)
    message(ERROR "Generated code requires C11 or higher")
endif()
